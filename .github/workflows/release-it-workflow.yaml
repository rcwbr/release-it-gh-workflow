on:
  workflow_call:
    inputs:
      always-dry-run:
        description: Whether to include a dry-run of release-it even on the default branch
        default: false
        required: false
        type: boolean
      always-release:
        description: Whether to include a (not dry-run) run of release-it even on non-default branches
        default: false
        required: false
        type: boolean
      app-id:
        description: GitHub App ID to act as, if using
        default: ''
        required: false
        type: string
      app-environment:
        description: Name of the GitHub environment that defines the app-secret-name, if stored within an environment
        default: ''
        required: false
        type: string
      default-branch:
        description: The branch from which to release on commit
        default: refs/heads/main
        required: false
        type: string
      release-it-config:
        description: The path to the release-it config file
        # By default, use the image baked-in config file
        default: /.release-it.json
        required: false
        type: string
      release-it-extra-args:
        description: Arbitrary extra args to provide to release-it CLI calls
        default: ''
        required: false
        type: string
      release-it-image:
        description: The release it action to use
        default: ghcr.io/rcwbr/release-it-docker-conventional-changelog:0.1.2
        required: false
        type: string
    secrets:
      app-secret:
        description: Secret that contains the GitHub App private key. Required if app-id set.
        required: false
jobs:
  release-it-dry-run:
    name: Release-it dry-run
    # By default, dry-run in contexts other than the main branch or tags
    if: ${{ inputs.always-dry-run || ( github.ref != inputs.default-branch && github.ref != format('refs/heads/{0}', inputs.default-branch) && github.ref_type != 'tag' ) }}
    runs-on: ubuntu-24.04
    container:
      image: ${{ inputs.release-it-image }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0
      -
        name: Release-it
        shell: bash
        run: |
          set -o pipefail
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
          git config --global user.name github-actions[bot]
          release-it \
            --ci \
            --changelog \
            --config ${{ inputs.release-it-config }} \
            ${{ inputs.release-it-extra-args }} \
            | tee $GITHUB_STEP_SUMMARY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-it:
    name: Release-it
    # By default, run release-it in contexts for the main branch
    # Skip if the commit pattern is "release: ", per https://github.com/rcwbr/release-it-docker/blob/485ec351cb07c71d39480d2fb03f529d77789067/base/.release-it.json#L4
    if: "${{ !startsWith(github.event.head_commit.message, 'release: ') && ( inputs.always-release || github.ref == inputs.default-branch || github.ref == format('refs/heads/{0}', inputs.default-branch) ) }}"
    runs-on: ubuntu-24.04
    container:
      image: ${{ inputs.release-it-image }}
    environment: ${{ inputs.app-environment }}
    steps:
      -
        name: Authenticate as app
        id: app-token
        if: ${{ inputs.app-id != '' }}
        uses: actions/create-github-app-token@v1.11.0
        with:
          app-id: ${{ inputs.app-id }}
          private-key: ${{ secrets.app-secret }}
      -
        name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0
          token: ${{ inputs.app-id != '' && steps.app-token.outputs.token || secrets.GITHUB_TOKEN }}
      -
        name: Release-it
        shell: bash
        run: |
          set -o pipefail
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
          git config --global user.name github-actions[bot]
          release-it \
            --ci \
            --config ${{ inputs.release-it-config }} \
            ${{ inputs.release-it-extra-args }} \
            | tee $GITHUB_STEP_SUMMARY
        env:
          # If an app-id is provided, use the token generated by it. Otherwise, use the workflow GITHUB_TOKEN
          GITHUB_TOKEN: ${{ inputs.app-id != '' && steps.app-token.outputs.token || secrets.GITHUB_TOKEN }}
